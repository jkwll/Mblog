<%@ page contentType="text/html; charset=utf-8" language="java"%>
<%@ taglib prefix="s" uri="/struts-tags"%>
<html>
<head>
<%@ include file="/public/include.jsp"%>
<title>fastdfs</title>
</head>
<body>
	<%@ include file="/public/header.jsp"%>
	<article class="aboutcon">
		<%-- 头的下方--%>
		<%@ include file="/public/header2.jsp"%>
		<div class="index_about">
			<%-- 文章标题 --%>
			<%@ include file="/public/title.jsp"%>
			<div class="book left">
				<%-- 正文 --%>
				<h1 style="border: 0px solid red; padding: 10px; font-size: 14px;"><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/chiangchou/p/fastdfs.html" style="border-bottom: 0px dotted rgb(239, 239, 239); padding-bottom: 10px; font-size: 19px; color: rgb(120, 175, 211); text-decoration: none;">用FastDFS一步步搭建文件管理系统</a></h1><p><a name="_labelTop"></a></p><p style="margin: 10px auto; font-size: 18px;"><strong>目录</strong></p><ul style="list-style-type: circle;" class=" list-paddingleft-2"><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label0" style="color: rgb(120, 175, 211); text-decoration: none;">&nbsp;一、FastDFS介绍</a></p></li><ul style="margin-left: 30px; padding-left: 0px;" class=" list-paddingleft-2"><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label0_0" style="color: rgb(120, 175, 211); text-decoration: none;">1、简介</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label0_1" style="color: rgb(120, 175, 211); text-decoration: none;">2、FastDFS的存储策略</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label0_2" style="color: rgb(120, 175, 211); text-decoration: none;">3、FastDFS的上传过程</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label0_3" style="color: rgb(120, 175, 211); text-decoration: none;">4、FastDFS的文件同步</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label0_4" style="color: rgb(120, 175, 211); text-decoration: none;">5、FastDFS的文件下载</a></p></li></ul><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1" style="color: rgb(120, 175, 211); text-decoration: none;">二、安装FastDFS环境</a></p></li><ul style="margin-left: 30px; padding-left: 0px;" class=" list-paddingleft-2"><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_0" style="color: rgb(120, 175, 211); text-decoration: none;">0、前言</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_1" style="color: rgb(120, 175, 211); text-decoration: none;">1、下载安装 libfastcommon</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_2" style="color: rgb(120, 175, 211); text-decoration: none;">2、下载安装FastDFS</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_3" style="color: rgb(120, 175, 211); text-decoration: none;">3、配置FastDFS跟踪器(Tracker)</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_4" style="color: rgb(120, 175, 211); text-decoration: none;">4、配置 FastDFS 存储 (Storage)</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_5" style="color: rgb(120, 175, 211); text-decoration: none;">5、文件上传测试</a></p></li></ul><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label2" style="color: rgb(120, 175, 211); text-decoration: none;">三、安装Nginx</a></p></li><ul style="margin-left: 30px; padding-left: 0px;" class=" list-paddingleft-2"><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label2_0" style="color: rgb(120, 175, 211); text-decoration: none;">1、安装nginx所需环境　　</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label2_1" style="color: rgb(120, 175, 211); text-decoration: none;">2、安装Nginx</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label2_2" style="color: rgb(120, 175, 211); text-decoration: none;">3、访问文件</a></p></li></ul><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label3" style="color: rgb(120, 175, 211); text-decoration: none;">四、FastDFS 配置 Nginx 模块</a></p></li><ul style="margin-left: 30px; padding-left: 0px;" class=" list-paddingleft-2"><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label3_0" style="color: rgb(120, 175, 211); text-decoration: none;">1、安装配置Nginx模块</a></p></li></ul><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label4" style="color: rgb(120, 175, 211); text-decoration: none;">五、Java客户端</a></p></li><ul style="margin-left: 30px; padding-left: 0px;" class=" list-paddingleft-2"><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label4_0" style="color: rgb(120, 175, 211); text-decoration: none;">1、首先需要搭建 FastDFS 客户端Java开发环境</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label4_1" style="color: rgb(120, 175, 211); text-decoration: none;">2、客户端API</a></p></li><li><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label4_2" style="color: rgb(120, 175, 211); text-decoration: none;">六、权限控制</a></p></li></ul></ul><p style="margin: 10px auto;">&nbsp;</p><hr style="height: 1px; border-right: none; border-bottom: none; border-left: none; border-image: initial; border-top-style: dashed; border-top-color: rgb(0, 102, 204);"/><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_labelTop" style="color: rgb(246, 138, 51);">回到顶部</a><a name="_label0"></a></p><h2 style="font-size: 21px; line-height: 1.5; margin: 10px 0px;">&nbsp;一、FastDFS介绍</h2><p style="margin: 10px auto;">FastDFS开源地址：<a href="https://github.com/happyfish100" target="_blank" style="color: rgb(120, 175, 211);">https://github.com/happyfish100</a></p><p style="margin: 10px auto;">参考：<a href="http://blog.chinaunix.net/uid-20196318-id-4058561.html" target="_blank" style="color: rgb(120, 175, 211);">分布式文件系统FastDFS设计原理</a>&nbsp;</p><p style="margin: 10px auto;">参考：<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/Leo_wl/p/6731647.html" target="_blank" style="color: rgb(120, 175, 211);">FastDFS分布式文件系统</a></p><p style="margin: 10px auto;">个人封装的FastDFS Java API：<a href="https://github.com/bojiangzhou/lyyzoo-fastdfs-java" target="_blank" style="color: rgb(120, 175, 211);">https://github.com/bojiangzhou/lyyzoo-fastdfs-java</a></p><p><a name="_label0_0"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">1、简介</h3><p style="margin: 10px auto;">FastDFS 是一个开源的高性能分布式文件系统（DFS）。 它的主要功能包括：文件存储，文件同步和文件访问，以及高容量和负载平衡。主要解决了海量数据存储问题，特别适合以中小文件（建议范围：4KB &lt; file_size &lt;500MB）为载体的在线服务。</p><p style="margin: 10px auto;">FastDFS 系统有三个角色：跟踪服务器(Tracker Server)、存储服务器(Storage Server)和客户端(Client)。</p><p style="margin: 10px auto;"><strong>　　Tracker Server</strong>：跟踪服务器，主要做调度工作，起到均衡的作用；负责管理所有的 storage server和 group，每个 storage 在启动后会连接 Tracker，告知自己所属 group 等信息，并保持周期性心跳。</p><p style="margin: 10px auto;"><strong>　　Storage Server</strong>：存储服务器，主要提供容量和备份服务；以 group 为单位，每个 group 内可以有多台 storage server，数据互为备份。</p><p style="margin: 10px auto;"><strong>　　Client</strong>：客户端，上传下载数据的服务器，也就是我们自己的项目所部署在的服务器。</p><p style="margin: 10px auto;">&nbsp;<div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011144153840-1185141903.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p><a name="_label0_1"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;"><strong>2、FastDFS的存储策略</strong></h3><p style="margin: 10px auto;">为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，一个卷下的存储服务器中的文件都是相同的，卷中的多台存储服务器起到了冗余备份和负载均衡的作用。</p><p style="margin: 10px auto;">在卷中增加服务器时，同步已有的文件由系统自动完成，同步完成后，系统自动将新增服务器切换到线上提供服务。当存储空间不足或即将耗尽时，可以动态添加卷。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。</p><p><a name="_label0_2"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;"><strong>3、FastDFS的上传过程</strong></h3><p style="margin: 10px auto;">FastDFS向使用者提供基本文件访问接口，比如upload、download、append、delete等，以客户端库的方式提供给用户使用。</p><p style="margin: 10px auto;">Storage Server会定期的向Tracker Server发送自己的存储信息。当Tracker Server Cluster中的Tracker Server不止一个时，各个Tracker之间的关系是对等的，所以客户端上传时可以选择任意一个Tracker。</p><p style="margin: 10px auto;">当Tracker收到客户端上传文件的请求时，会为该文件分配一个可以存储文件的group，当选定了group后就要决定给客户端分配group中的哪一个storage server。当分配好storage server后，客户端向storage发送写文件请求，storage将会为文件分配一个数据存储目录。然后为文件分配一个fileid，最后根据以上的信息生成文件名存储文件。</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171012121639387-1574147926.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p><a name="_label0_3"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;"><strong>4、FastDFS的文件同步</strong></h3><p style="margin: 10px auto;">写文件时，客户端将文件写至group内一个storage server即认为写文件成功，storage server写完文件后，会由后台线程将文件同步至同group内其他的storage server。</p><p style="margin: 10px auto;">每个storage写文件后，同时会写一份binlog，binlog里不包含文件数据，只包含文件名等元信息，这份binlog用于后台同步，storage会记录向group内其他storage同步的进度，以便重启后能接上次的进度继续同步；进度以时间戳的方式进行记录，所以最好能保证集群内所有server的时钟保持同步。</p><p style="margin: 10px auto;">storage的同步进度会作为元数据的一部分汇报到tracker上，tracke在选择读storage的时候会以同步进度作为参考。</p><p><a name="_label0_4"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;"><strong>5、FastDFS的文件下载</strong></h3><p style="margin: 10px auto;">客户端uploadfile成功后，会拿到一个storage生成的文件名，接下来客户端根据这个文件名即可访问到该文件。</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2015.cnblogs.com/blog/380252/201704/380252-20170415090611017-204910775.png" alt="" style="border: 1px solid black; max-width: 900px;"/></div></p><p style="margin: 10px auto;">跟upload file一样，在downloadfile时客户端可以选择任意tracker server。tracker发送download请求给某个tracker，必须带上文件名信息，tracke从文件名中解析出文件的group、大小、创建时间等信息，然后为该请求选择一个storage用来服务读请求。</p><p style="margin: 10px auto;">&nbsp;</p><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_labelTop" style="color: rgb(246, 138, 51);">回到顶部</a><a name="_label1"></a></p><h2 style="font-size: 21px; line-height: 1.5; margin: 10px 0px;">二、安装FastDFS环境</h2><p><a name="_label1_0"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">0、前言</h3><p style="margin: 10px auto;">操作环境：CentOS7 X64，以下操作都是单机环境。</p><p style="margin: 10px auto;">我把所有的安装包下载到/softpackages/下，解压到当前目录。</p><p style="margin: 10px auto;">先做一件事，修改hosts，将文件服务器的ip与域名映射(单机TrackerServer环境)，因为后面很多配置里面都需要去配置服务器地址，ip变了，就只需要修改hosts即可。</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/etc/hosts

增加如下一行，这是我的IP
192.168.51.128&nbsp;file.ljzsg.com

如果要本机访问虚拟机，在C:\Windows\System32\drivers\etc\hosts中同样增加一行</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p><a name="_label1_1"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">1、下载安装 libfastcommon</h3><p style="margin: 10px auto;"><span class="fontstyle0">libfastcommon是从 FastDFS 和 FastDHT 中提取出来的公共 C 函数库，基础环境，安装即可 。<br/></span></p><p style="margin: 10px auto;">① 下载libfastcommon</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;wget&nbsp;https://github.com/happyfish100/libfastcommon/archive/V1.0.7.tar.gz</pre><p style="margin: 10px auto;">② 解压</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;tar&nbsp;-zxvf&nbsp;V1.0.7.tar.gz
#&nbsp;cd&nbsp;libfastcommon-1.0.7</pre><p style="margin: 10px auto;">③ 编译、安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;./make.sh
#&nbsp;./make.sh&nbsp;install</pre><p style="margin: 10px auto;">④&nbsp;libfastcommon.so 安装到了/usr/lib64/libfastcommon.so，但是FastDFS主程序设置的lib目录是/usr/local/lib，所以需要创建软链接。</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;ln&nbsp;-s&nbsp;/usr/lib64/libfastcommon.so&nbsp;/usr/local/lib/libfastcommon.so
#&nbsp;ln&nbsp;-s&nbsp;/usr/lib64/libfastcommon.so&nbsp;/usr/lib/libfastcommon.so
#&nbsp;ln&nbsp;-s&nbsp;/usr/lib64/libfdfsclient.so&nbsp;/usr/local/lib/libfdfsclient.so
#&nbsp;ln&nbsp;-s&nbsp;/usr/lib64/libfdfsclient.so&nbsp;/usr/lib/libfdfsclient.so</pre><p><a name="_label1_2"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">2、下载安装FastDFS</h3><p style="margin: 10px auto;">① 下载FastDFS</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;wget&nbsp;https://github.com/happyfish100/fastdfs/archive/V5.05.tar.gz</pre><p style="margin: 10px auto;">② 解压</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;tar&nbsp;-zxvf&nbsp;V5.05.tar.gz
#&nbsp;cd&nbsp;fastdfs-5.05</pre><p style="margin: 10px auto;">③ 编译、安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;./make.sh
#&nbsp;./make.sh&nbsp;install</pre><p style="margin: 10px auto;"><span class="fontstyle0">④ 默认安装方式安装后的相应文件与目录<br/>　　A、服务脚本：</span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">/etc/init.d/fdfs_storaged
/etc/init.d/fdfs_tracker</pre><p style="margin: 10px auto;"><span class="fontstyle0">　　B、配置文件（这三个是作者给的样例配置文件） :<br/></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">/etc/fdfs/client.conf.sample
/etc/fdfs/storage.conf.sample
/etc/fdfs/tracker.conf.sample</pre><p style="margin: 10px auto;"><span class="fontstyle0"><span class="fontstyle0"><span class="fontstyle0"><span class="fontstyle0">　　C、命令工具在 /usr/bin/ 目录下：<span class="fontstyle0"><br/></span></span></span></span></span></p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">fdfs_appender_test
fdfs_appender_test1
fdfs_append_file
fdfs_crc32
fdfs_delete_file
fdfs_download_file
fdfs_file_info
fdfs_monitor
fdfs_storaged
fdfs_test
fdfs_test1
fdfs_trackerd
fdfs_upload_appender
fdfs_upload_file
stop.sh
restart.sh</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑤&nbsp;<span class="fontstyle0">FastDFS 服务脚本设置的 bin 目录是 /usr/local/bin， 但实际命令安装在 /usr/bin/ 下。</span></p><p style="margin: 10px auto;"><span class="fontstyle0">　　两种方式：</span></p><p style="margin: 10px auto;"><span class="fontstyle0">　　》 一是修改<span class="fontstyle0">FastDFS 服务脚本中相应的命令路径，也就是把&nbsp;<span class="fontstyle0">/etc/init.d/fdfs_storaged&nbsp;<span class="fontstyle0">和&nbsp;<span class="fontstyle0">/etc/init.d/fdfs_tracker&nbsp;<span class="fontstyle0">两个脚本中的&nbsp;<span class="fontstyle0">/usr/local/bin&nbsp;<span class="fontstyle0">修改成&nbsp;<span class="fontstyle0">/usr/bin。<br/></span></span></span></span></span></span></span></span></span></p><p style="margin: 10px auto;">&nbsp;　　　　<span class="fontstyle0">#&nbsp;<span class="fontstyle0">vim fdfs_trackerd<br/><span class="fontstyle0">　　　　使用查找替换命令进统一修改:<span class="fontstyle0">%s+/usr/local/bin+/usr/bin<br/><span class="fontstyle0">　　　　#&nbsp;<span class="fontstyle0">vim fdfs_storaged<br/><span class="fontstyle0">　　　　使用查找替换命令进统一修改:<span class="fontstyle0">%s+/usr/local/bin+/usr/bin</span></span></span></span></span></span></span></span></p><p style="margin: 10px auto;"><span class="fontstyle0">　　　　<div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011104718043-576731412.png" alt="" width="452" height="140" style="border: 0px; max-width: 900px;"/></div></span></p><p style="margin: 10px auto;">　　》 二是建立 /usr/bin 到 /usr/local/bin 的软链接，我是用这种方式。　　</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;ln&nbsp;-s&nbsp;/usr/bin/fdfs_trackerd&nbsp;&nbsp;&nbsp;/usr/local/bin
#&nbsp;ln&nbsp;-s&nbsp;/usr/bin/fdfs_storaged&nbsp;&nbsp;&nbsp;/usr/local/bin
#&nbsp;ln&nbsp;-s&nbsp;/usr/bin/stop.sh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/usr/local/bin
#&nbsp;ln&nbsp;-s&nbsp;/usr/bin/restart.sh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/usr/local/bin</pre><p><a name="_label1_3"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">3、配置FastDFS跟踪器(Tracker)</h3><p style="margin: 10px auto;">配置文件详细说明参考：<a id="thread_subject" href="http://bbs.chinaunix.net/forum.php?mod=viewthread&tid=1941456&extra=page%3D1%26filter%3Ddigest%26digest%3D1" target="_blank" style="color: rgb(120, 175, 211);">FastDFS 配置文件详解</a></p><p style="margin: 10px auto;">① 进入 /etc/fdfs，复制 FastDFS 跟踪器样例配置文件 tracker.conf.sample，并重命名为 tracker.conf。</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;cd&nbsp;/etc/fdfs
#&nbsp;cp&nbsp;tracker.conf.sample&nbsp;tracker.conf
#&nbsp;vim&nbsp;tracker.conf</pre><p style="margin: 10px auto;">② 编辑<span class="fontstyle0">tracker.conf ，标红的需要修改下，其它的默认即可。<br/></span></p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;配置文件是否不生效，false&nbsp;为生效
disabled=false
#&nbsp;提供服务的端口
port=22122
#&nbsp;Tracker&nbsp;数据和日志目录地址(根目录必须存在,子目录会自动创建)#&nbsp;HTTP&nbsp;服务端口</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">③ 创建tracker基础数据目录，即base_path对应的目录</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;mkdir&nbsp;-p&nbsp;/ljzsg/fastdfs/tracker</pre><p style="margin: 10px auto;">④ 防火墙中打开跟踪端口（默认的22122）</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/etc/sysconfig/iptables
添加如下端口行：
-A&nbsp;INPUT&nbsp;-m&nbsp;state&nbsp;--state&nbsp;NEW&nbsp;-m&nbsp;tcp&nbsp;-p&nbsp;tcp&nbsp;--dport&nbsp;22122&nbsp;-j&nbsp;ACCEPT
重启防火墙：
#&nbsp;service&nbsp;iptables&nbsp;restart</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑤ 启动Tracker</p><p style="margin: 10px auto;">初次成功启动，会在 /ljzsg/fdfsdfs/tracker/ (配置的base_path)下创建 data、logs 两个目录。</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">可以用这种方式启动
#&nbsp;/etc/init.d/fdfs_trackerd&nbsp;start

也可以用这种方式启动，前提是上面创建了软链接，后面都用这种方式
#&nbsp;service&nbsp;fdfs_trackerd&nbsp;start</pre><p style="margin: 10px auto;"><span class="fontstyle0">查看 FastDFS Tracker 是否已成功启动 ，22122端口正在被监听，则算是Tracker服务安装成功。<br/></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;netstat&nbsp;-unltp|grep&nbsp;fdfs</pre><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011121344184-1089101646.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">关闭Tracker命令：</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;service&nbsp;fdfs_trackerd&nbsp;stop</pre><p style="margin: 10px auto;">⑥ 设置Tracker开机启动</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;chkconfig&nbsp;fdfs_trackerd&nbsp;on

或者：
#&nbsp;vim&nbsp;/etc/rc.d/rc.local
加入配置：
/etc/init.d/fdfs_trackerd&nbsp;start</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑦&nbsp;<span class="fontstyle0">tracker server&nbsp;<span class="fontstyle2">目录及文件结构&nbsp;<br/></span></span></p><p style="margin: 10px auto;">Tracker服务启动成功后，会在base_path下创建data、logs两个目录。目录结构如下：</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">${base_path}
&nbsp;&nbsp;|__data
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;|__storage_groups.dat：存储分组信息
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;|__storage_servers.dat：存储服务器列表
&nbsp;&nbsp;|__logs
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;|__trackerd.log：&nbsp;tracker&nbsp;server&nbsp;日志文件</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p><a name="_label1_4"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">4、<span class="fontstyle0">配置 FastDFS 存储 (Storage)</span></h3><p style="margin: 10px auto;"><span class="fontstyle0">① 进入 /etc/fdfs 目录，<span class="fontstyle0">复制 FastDFS 存储器样例配置文件 storage.conf.sample，并重命名为 storage.conf</span></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;cd&nbsp;/etc/fdfs
#&nbsp;cp&nbsp;storage.conf.sample&nbsp;storage.conf
#&nbsp;vim&nbsp;storage.conf</pre><p style="margin: 10px auto;">② 编辑storage.conf</p><p style="margin: 10px auto;">标红的需要修改，其它的默认即可。</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;配置文件是否不生效，false&nbsp;为生效
disabled=false&nbsp;

#&nbsp;指定此&nbsp;storage&nbsp;server&nbsp;所在&nbsp;组(卷)
group_name=group1

#&nbsp;storage&nbsp;server&nbsp;服务端口
port=23000

#&nbsp;心跳间隔时间，单位为秒&nbsp;(这里是指主动向&nbsp;tracker&nbsp;server&nbsp;发送心跳)
heart_beat_interval=30

#&nbsp;Storage&nbsp;数据和日志目录地址(根目录必须存在，子目录会自动生成)#&nbsp;存放文件时&nbsp;storage&nbsp;server&nbsp;支持多个路径。这里配置存放文件的基路径数目，通常只配一个目录。
store_path_count=1


#&nbsp;逐一配置&nbsp;store_path_count&nbsp;个路径，索引号基于&nbsp;0。
#&nbsp;如果不配置&nbsp;store_path0，那它就和&nbsp;base_path&nbsp;对应的路径一样。#&nbsp;FastDFS&nbsp;存储文件时，采用了两级目录。这里配置存放文件的目录个数。&nbsp;
#&nbsp;如果本参数只为&nbsp;N（如：&nbsp;256），那么&nbsp;storage&nbsp;server&nbsp;在初次运行时，会在&nbsp;store_path&nbsp;下自动创建&nbsp;N&nbsp;*&nbsp;N&nbsp;个存放文件的子目录。
subdir_count_per_path=256

#&nbsp;tracker_server&nbsp;的列表&nbsp;，会主动连接&nbsp;tracker_server
#&nbsp;有多个&nbsp;tracker&nbsp;server&nbsp;时，每个&nbsp;tracker&nbsp;server&nbsp;写一行#&nbsp;允许系统同步的时间段&nbsp;(默认是全天)&nbsp;。一般用于避免高峰同步产生一些问题而设定。</pre><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;访问端口</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">③ 创建Storage基础数据目录，对应base_path目录</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;mkdir&nbsp;-p&nbsp;/ljzsg/fastdfs/storage

#&nbsp;这是配置的store_path0路径
#&nbsp;mkdir&nbsp;-p&nbsp;/ljzsg/fastdfs/file</pre><p style="margin: 10px auto;">④&nbsp;<span class="fontstyle0">防火墙中打开存储器端口（默认的 23000）&nbsp;<br/></span></p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/etc/sysconfig/iptables

添加如下端口行：
-A&nbsp;INPUT&nbsp;-m&nbsp;state&nbsp;--state&nbsp;NEW&nbsp;-m&nbsp;tcp&nbsp;-p&nbsp;tcp&nbsp;--dport&nbsp;23000&nbsp;-j&nbsp;ACCEPT

重启防火墙：
#&nbsp;service&nbsp;iptables&nbsp;restart</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011133233777-1903096242.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">⑤ 启动 Storage</p><p style="margin: 10px auto;"><span class="fontstyle0"><span class="fontstyle0">启动Storage前确保Tracker是启动的。初次启动成功，会在 /ljzsg/fastdfs/storage 目录下创建 data、 logs 两个目录。</span><br/></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">可以用这种方式启动
#&nbsp;/etc/init.d/fdfs_storaged&nbsp;start

也可以用这种方式，后面都用这种
#&nbsp;service&nbsp;fdfs_storaged&nbsp;start</pre><p style="margin: 10px auto;">查看 Storage 是否成功启动，23000 端口正在被监听，就算 Storage 启动成功。</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;netstat&nbsp;-unltp|grep&nbsp;fdfs</pre><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011134723387-604894314.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">关闭Storage命令：</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;service&nbsp;fdfs_storaged&nbsp;stop</pre><p style="margin: 10px auto;">查看Storage和Tracker是否在通信：</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">/usr/bin/fdfs_monitor&nbsp;/etc/fdfs/storage.conf</pre><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171016093815615-757608481.png" alt="" width="693" height="420" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">⑥ 设置 Storage 开机启动</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;chkconfig&nbsp;fdfs_storaged&nbsp;on</pre><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">或者：
#&nbsp;vim&nbsp;/etc/rc.d/rc.local
加入配置：
/etc/init.d/fdfs_storaged&nbsp;start</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑦ Storage 目录</p><p style="margin: 10px auto;">同 Tracker，Storage 启动成功后，在base_path 下创建了data、logs目录，记录着 Storage Server 的信息。</p><p style="margin: 10px auto;">在 store_path0 目录下，创建了N*N个子目录：</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011135658074-1715166829.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p><a name="_label1_5"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">5、文件上传测试</h3><p style="margin: 10px auto;">① 修改 Tracker&nbsp;<span class="fontstyle0">服务器中的客户端配置文件&nbsp;</span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;cd&nbsp;/etc/fdfs
#&nbsp;cp&nbsp;client.conf.sample&nbsp;client.conf
#&nbsp;vim&nbsp;client.conf</pre><p style="margin: 10px auto;">修改如下配置即可，其它默认。</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;Client&nbsp;的数据和日志目录base_path=/ljzsg/fastdfs/client#&nbsp;Tracker端口tracker_server=file.ljzsg.com:22122</pre><p style="margin: 10px auto;">② 上传测试</p><p style="margin: 10px auto;">&nbsp;在linux内部执行如下命令上传 namei.jpeg 图片</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;/usr/bin/fdfs_upload_file&nbsp;/etc/fdfs/client.conf&nbsp;namei.jpeg</pre><p style="margin: 10px auto;">上传成功后返回文件ID号：group1/M00/00/00/wKgz6lnduTeAMdrcAAEoRmXZPp870.jpeg</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011142634105-1857091563.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">返回的文件ID由<span class="kwd">group<span class="pun">、存储目录、两级子目录、<span class="pln">fileid<span class="pun">、文件后缀名（由客户端指定，主要用于区分文件类型）拼接而成。</span></span></span></span></p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011151728965-914197096.png" alt="" style="border: 1px solid black; max-width: 900px;"/></div></p><p style="margin: 10px auto;">&nbsp;</p><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_labelTop" style="color: rgb(246, 138, 51);">回到顶部</a><a name="_label2"></a></p><h2 style="font-size: 21px; line-height: 1.5; margin: 10px 0px;">三、安装Nginx</h2><p style="margin: 10px auto;">上面将文件上传成功了，但我们无法下载。因此安装Nginx作为服务器以支持Http方式访问文件。同时，后面安装FastDFS的Nginx模块也需要Nginx环境。</p><p style="margin: 10px auto;">Nginx只需要安装到StorageServer所在的服务器即可，用于访问文件。我这里由于是单机，TrackerServer和StorageServer在一台服务器上。</p><p><a name="_label2_0"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">1、安装nginx所需环境　　</h3><p style="margin: 10px auto;">①&nbsp;gcc 安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;yum&nbsp;install&nbsp;gcc-c++</pre><p style="margin: 10px auto;">②&nbsp;PCRE pcre-devel 安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;yum&nbsp;install&nbsp;-y&nbsp;pcre&nbsp;pcre-devel</pre><p style="margin: 10px auto;">③&nbsp;zlib 安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;yum&nbsp;install&nbsp;-y&nbsp;zlib&nbsp;zlib-devel</pre><p style="margin: 10px auto;">④&nbsp;OpenSSL 安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;yum&nbsp;install&nbsp;-y&nbsp;openssl&nbsp;openssl-devel</pre><p><a name="_label2_1"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">2、安装Nginx</h3><p style="margin: 10px auto;">① 下载nginx</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;wget&nbsp;-c&nbsp;https://nginx.org/download/nginx-1.12.1.tar.gz</pre><p style="margin: 10px auto;">② 解压</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;tar&nbsp;-zxvf&nbsp;nginx-1.12.1.tar.gz
#&nbsp;cd&nbsp;nginx-1.12.1</pre><p style="margin: 10px auto;">③ 使用默认配置</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;./configure</pre><p style="margin: 10px auto;">④ 编译、安装</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;make
#&nbsp;make&nbsp;install</pre><p style="margin: 10px auto;">⑤ 启动nginx</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;cd&nbsp;/usr/local/nginx/sbin/
#&nbsp;./nginx&nbsp;

其它命令
#&nbsp;./nginx&nbsp;-s&nbsp;stop
#&nbsp;./nginx&nbsp;-s&nbsp;quit
#&nbsp;./nginx&nbsp;-s&nbsp;reload</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑥ 设置开机启动</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/etc/rc.local

添加一行：
/usr/local/nginx/sbin/nginx

#&nbsp;设置执行权限
#</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑦ 查看nginx的版本及模块</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">/usr/local/nginx/sbin/nginx&nbsp;-V</pre><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011165300730-1693050013.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">⑧&nbsp;<span class="fontstyle0">防火墙中打开Nginx端口（默认的 80）&nbsp;<br/></span></p><p style="margin: 10px auto;"><span class="fontstyle0">添加后就能在本机使用80端口访问了。</span></p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/etc/sysconfig/iptables

添加如下端口行：
-A&nbsp;INPUT&nbsp;-m&nbsp;state&nbsp;--state&nbsp;NEW&nbsp;-m&nbsp;tcp&nbsp;-p&nbsp;tcp&nbsp;--dport&nbsp;80&nbsp;-j&nbsp;ACCEPT

重启防火墙：
#&nbsp;service&nbsp;iptables&nbsp;restart</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011172121746-2118138931.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p><a name="_label2_2"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">3、访问文件</h3><p style="margin: 10px auto;">简单的测试访问文件</p><p style="margin: 10px auto;">① 修改nginx.conf</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/usr/local/nginx/conf/nginx.conf

添加如下行，将&nbsp;/group1/M00&nbsp;映射到&nbsp;/ljzsg/fastdfs/file/data
location&nbsp;/group1/M00&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;/ljzsg/fastdfs/file/data;
}

#&nbsp;重启nginx
#&nbsp;/usr/local/nginx/sbin/nginx&nbsp;-s&nbsp;reload</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011180543746-937678567.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">② 在浏览器访问之前上传的图片、成功。</p><p style="margin: 10px auto;">http://file.ljzsg.com/group1/M00/00/00/wKgz6lnduTeAMdrcAAEoRmXZPp870.jpeg</p><p style="margin: 10px auto;">&nbsp;</p><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_labelTop" style="color: rgb(246, 138, 51);">回到顶部</a><a name="_label3"></a></p><h2 style="font-size: 21px; line-height: 1.5; margin: 10px 0px;">四、FastDFS 配置 Nginx 模块</h2><p><a name="_label3_0"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">1、安装配置Nginx模块</h3><p style="margin: 10px auto;">① fastdfs-nginx-module 模块说明</p><p style="margin: 10px auto;">　　FastDFS 通过 Tracker 服务器，将文件放在 Storage 服务器存储， 但是同组存储服务器之间需要进行文件复制， 有同步延迟的问题。</p><p style="margin: 10px auto;">　　假设 Tracker 服务器将文件上传到了 192.168.51.128，上传成功后文件 ID已经返回给客户端。</p><p style="margin: 10px auto;">　　此时 FastDFS 存储集群机制会将这个文件同步到同组存储 192.168.51.129，在文件还没有复制完成的情况下，客户端如果用这个文件 ID 在 192.168.51.129 上取文件,就会出现文件无法访问的错误。</p><p style="margin: 10px auto;">　　而 fastdfs-nginx-module 可以重定向文件链接到源服务器取文件，避免客户端由于复制延迟导致的文件无法访问错误。</p><p style="margin: 10px auto;">② 下载&nbsp;fastdfs-nginx-module、解压</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;这里为啥这么长一串呢，因为最新版的master与当前nginx有些版本问题。
#&nbsp;wget&nbsp;https://github.com/happyfish100/fastdfs-nginx-module/archive/5e5f3566bbfa57418b5506aaefbe107a42c9fcb1.zip

#&nbsp;解压
#&nbsp;unzip&nbsp;5e5f3566bbfa57418b5506aaefbe107a42c9fcb1.zip

#&nbsp;重命名
#&nbsp;mv&nbsp;fastdfs-nginx-module-5e5f3566bbfa57418b5506aaefbe107a42c9fcb1&nbsp;&nbsp;fastdfs-nginx-module-master</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">③ 配置Nginx</p><p style="margin: 10px auto;">在nginx中添加模块</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;先停掉nginx服务
#&nbsp;/usr/local/nginx/sbin/ngix&nbsp;-s&nbsp;stop

进入解压包目录
#&nbsp;cd&nbsp;/softpackages/nginx-1.12.1/

#&nbsp;添加模块
#&nbsp;./configure&nbsp;--add-module=../fastdfs-nginx-module-master/src

重新编译、安装
#&nbsp;make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">&nbsp;④ 查看Nginx的模块</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;/usr/local/nginx/sbin/nginx&nbsp;-V</pre><p style="margin: 10px auto;">有下面这个就说明添加模块成功</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011224125574-1739252073.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">⑤ 复制 fastdfs-nginx-module 源码中的配置文件到/etc/fdfs 目录， 并修改</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;cd&nbsp;/softpackages/fastdfs-nginx-module-master/src

#&nbsp;cp&nbsp;mod_fastdfs.conf&nbsp;/etc/fdfs/</pre><p style="margin: 10px auto;">修改如下配置，其它默认</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;Tracker&nbsp;Server
#&nbsp;StorageServer&nbsp;默认端口
storage_server_port=23000

#&nbsp;如果文件ID的uri中包含/group**，则要设置为true#&nbsp;Storage&nbsp;配置的store_path0路径，必须和storage.conf中的一致</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">⑥&nbsp;复制 FastDFS 的部分配置文件到/etc/fdfs 目录</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;cd&nbsp;/softpackages/fastdfs-5.05/conf/

#&nbsp;cp&nbsp;anti-steal.jpg&nbsp;http.conf&nbsp;mime.types&nbsp;/etc/fdfs/</pre><p style="margin: 10px auto;">&nbsp;⑦ 配置nginx，修改nginx.conf</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;vim&nbsp;/usr/local/nginx/conf/nginx.conf</pre><p style="margin: 10px auto;">修改配置，其它的默认</p><p style="margin: 10px auto;">在80端口下添加fastdfs-nginx模块</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">location&nbsp;~/group([0-9])/M00&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;ngx_fastdfs_module;
}</pre><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011184247777-40074297.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;"><span class="fontstyle0">注意：</span></p><p style="margin: 10px auto;"><span class="fontstyle0">　　listen 80&nbsp;<span class="fontstyle0">端口值是要与&nbsp;<span class="fontstyle0">/etc/fdfs/storage.conf&nbsp;<span class="fontstyle0">中的&nbsp;<span class="fontstyle0">http.server_port=80 (前面改成80了)<span class="fontstyle0">相对应。如果改成其它端口，则需要统一，同时在防火墙中打开该端口。<span class="fontstyle0"><span class="fontstyle0"><br/></span></span></span></span></span></span></span></span></p><p style="margin: 10px auto;"><span class="fontstyle0"><span class="fontstyle0"><span class="fontstyle0"><span class="fontstyle0"><span class="fontstyle0"><span class="fontstyle0">　　location 的配置，如果有多个group则配置<span class="fontstyle0">location&nbsp;<span class="fontstyle0">~/group([0-9])/M00 ，没有则不用配group。</span></span></span></span></span></span></span></span></p><p style="margin: 10px auto;">⑧&nbsp;<span class="fontstyle0">在/ljzsg/fastdfs/file 文件存储目录下创建软连接，将其链接到实际存放数据的目录，这一步可以省略。<br/></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;ln&nbsp;-s&nbsp;/ljzsg/fastdfs/file/data/&nbsp;/ljzsg/fastdfs/file/data/M00</pre><p style="margin: 10px auto;">⑨ 启动nginx</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;/usr/local/nginx/sbin/nginx</pre><p style="margin: 10px auto;">打印处如下就算配置成功</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171011230509512-654301113.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">⑩ 在地址栏访问。</p><p style="margin: 10px auto;">能下载文件就算安装成功。注意和第三点中直接使用nginx路由访问不同的是，这里配置 fastdfs-nginx-module 模块，可以重定向文件链接到源服务器取文件。</p><p style="margin: 10px auto;"><span class="fontstyle0">http://file.ljzsg.com/group1/M00/00/00/wKgz6lnduTeAMdrcAAEoRmXZPp870.jpeg</span></p><p style="margin: 10px auto;">&nbsp;</p><p style="margin: 10px auto;">最终部署结构图(盗的图)：可以按照下面的结构搭建环境。</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171012180511480-692747720.png" alt="" style="border: 1px solid black; max-width: 900px;"/></div></p><p style="margin: 10px auto;">&nbsp;</p><p><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_labelTop" style="color: rgb(246, 138, 51);">回到顶部</a><a name="_label4"></a></p><h2 style="font-size: 21px; line-height: 1.5; margin: 10px 0px;">五、Java客户端</h2><p style="margin: 10px auto;">前面文件系统平台搭建好了，现在就要写客户端代码在系统中实现上传下载，这里只是简单的测试代码。</p><p><a name="_label4_0"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">1、首先需要搭建 FastDFS 客户端Java开发环境</h3><p style="margin: 10px auto;">① 项目中使用maven进行依赖管理，可以在pom.xml中引入如下依赖即可：</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&lt;dependency&gt;
&nbsp;&nbsp;&nbsp;&lt;groupId&gt;net.oschina.zcx7878&lt;/groupId&gt;
&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;fastdfs-client-java&lt;/artifactId&gt;
&nbsp;&nbsp;&nbsp;&lt;version&gt;1.27.0.0&lt;/version&gt;
&lt;/dependency&gt;</pre><p style="margin: 10px auto;">其它的方式，参考官方文档：https://github.com/happyfish100/fastdfs-client-java</p><p style="margin: 10px auto;">② 引入配置文件</p><p style="margin: 10px auto;">可直接复制包下的 fastdfs-client.properties.sample 或者&nbsp;fdfs_client.conf.sample，到你的项目中，去掉.sample。</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171012112805371-395330483.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p style="margin: 10px auto;">我这里直接复制 fastdfs-client.properties.sample 中的配置到项目配置文件 config.properties 中，修改tracker_servers。只需要加载这个配置文件即可</p><p style="margin: 10px auto;"><div align="center"><img src="https://images2017.cnblogs.com/blog/856154/201710/856154-20171012120004199-247798219.png" alt="" style="border: 0px; max-width: 900px;"/></div></p><p><a name="_label4_1"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">2、客户端API</h3><p style="margin: 10px auto;">个人封装的FastDFS Java API以同步到github：<a href="https://github.com/bojiangzhou/lyyzoo-fastdfs-java.git" target="_blank" style="color: rgb(120, 175, 211);">https://github.com/bojiangzhou/lyyzoo-fastdfs-java.git</a></p><p style="margin: 10px auto;">&nbsp;</p><p><a name="_label4_2"></a></p><h3 style="font-size: 16px; line-height: 1.5; margin: 10px 0px;">六、权限控制</h3><p style="margin: 10px auto;">前面使用nginx支持http方式访问文件，但所有人都能直接访问这个文件服务器了，所以做一下权限控制。</p><p style="margin: 10px auto;">FastDFS的权限控制是在服务端开启token验证，客户端根据文件名、当前unix时间戳、秘钥获取token，在地址中带上token参数即可通过http方式访问文件。</p><p style="margin: 10px auto;">① 服务端开启token验证</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">修改http.conf
#&nbsp;vim&nbsp;/etc/fdfs/http.conf

设置为true表示开启token验证密钥，跟客户端配置文件的fastdfs.http_secret_key保持一致如果token检查失败，返回的页面</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">记得重启服务。</p><p style="margin: 10px auto;">② 配置客户端</p><p style="margin: 10px auto;">客户端只需要设置如下两个参数即可，两边的密钥保持一致。</p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">#&nbsp;token&nbsp;防盗链功能
fastdfs.http_anti_steal_token=true
#&nbsp;密钥
fastdfs.http_secret_key=FASTDFS1234567890</pre><p style="margin: 10px auto;">③ 客户端生成token</p><p style="margin: 10px auto;">访问文件需要带上生成的token以及unix时间戳，所以返回的token是token和时间戳的拼接。</p><p style="margin: 10px auto;">之后，将token拼接在地址后即可访问：file.ljzsg.com/group1/M00/00/00/wKgzgFnkaXqAIfXyAAEoRmXZPp878.jpeg?token=078d370098b03e9020b82c829c205e1f&amp;ts=1508141521</p><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;获取访问服务器的token，拼接到地址后面&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;filepath&nbsp;文件路径&nbsp;group1/M00/00/00/wKgzgFnkTPyAIAUGAAEoRmXZPp876.jpeg&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;httpSecretKey&nbsp;密钥&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;返回token，如：&nbsp;token=078d370098b03e9020b82c829c205e1f&amp;ts=1508141521&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;getToken(String&nbsp;filepath,&nbsp;String&nbsp;httpSecretKey){&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;unix&nbsp;seconds10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;ts&nbsp;=&nbsp;(int)&nbsp;Instant.now().getEpochSecond();11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;token12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;token&nbsp;=&nbsp;&quot;null&quot;;13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token&nbsp;=&nbsp;ProtoCommon.getToken(getFilename(filepath),&nbsp;ts,&nbsp;httpSecretKey);15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(UnsupportedEncodingException&nbsp;e)&nbsp;{16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(NoSuchAlgorithmException&nbsp;e)&nbsp;{18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(MyException&nbsp;e)&nbsp;{20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}22&nbsp;23&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuilder&nbsp;sb&nbsp;=&nbsp;new&nbsp;StringBuilder();24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.append(&quot;token=&quot;).append(token);25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.append(&quot;&amp;ts=&quot;).append(ts);26&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;sb.toString();28&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(120, 175, 211); text-decoration: underline; border: none !important;"><div align="center"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border: none !important;"/></div></a></span></p><p style="margin: 10px auto;">④ 注意事项</p><p style="margin: 10px auto;">如果生成的token验证无法通过，请进行如下两项检查：<br/>　　A. 确认调用token生成函数(ProtoCommon.getToken)，传递的文件ID中没有包含group name。传递的文件ID格式形如：M00/00/00/wKgzgFnkTPyAIAUGAAEoRmXZPp876.jpeg</p><p style="margin: 10px auto;">　　B. 确认服务器时间基本是一致的，注意服务器时间不能相差太多，不要相差到分钟级别。</p><p style="margin: 10px auto;">⑤ 对比下发现，如果系统文件隐私性较高，可以直接通过fastdfs-client提供的API去访问即可，不用再配置Nginx走http访问。配置Nginx的主要目的是为了快速访问服务器的文件(如图片)，如果还要加权限验证，则需要客户端生成token，其实已经没有多大意义。</p><p style="margin: 10px auto;">关键是，这里我没找到FastDFS如何对部分资源加token验证，部分开放。有知道的还请留言。</p><p><br/></p>
				<%@ include file="/public/lower.jsp"%>
			</div>
		</div>
		<%@ include file="/public/knowledge_right.jsp"%>
	</article>
	<%@ include file="/public/info.jsp"%>
	<script
		src="${ pageContext.request.contextPath }/knowledge/js/common.js"></script>
	<script
		src="${ pageContext.request.contextPath }/knowledge/js/silder.js"></script>
</body>
</html>